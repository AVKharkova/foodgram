volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    container_name: foodgram_db
    env_file:
      - ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

  backend:
    image: netkann/foodgram_backend:latest
    container_name: foodgram_backend
    env_file:
      - ./.env
    depends_on:
      - db
    volumes:
      - static:/app/static
      - media:/app/media
      - ./.env:/app/.env
    expose:
      - "8000"
    restart: always

  frontend:
    container_name: foodgram-front
    build: ./frontend
    volumes:
      - ./frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    env_file:
      - ./.env
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static
      - media:/app/media
      - type: image
        source: netkann/foodgram_frontend:latest
        target: /usr/share/nginx/html
        image_path: /app/result_build
    depends_on:
      - backend
    restart: always